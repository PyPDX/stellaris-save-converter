AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Resources:
  FileStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedOrigins:
              - "*"
            AllowedMethods:
              - GET
              - POST

  LambdaIamRole:
    Type: AWS::IAM::Role
    DependsOn: FileStorageBucket
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: !Join ["", [!GetAtt FileStorageBucket.Arn, "/*"]]
          PolicyName: stellaris-save-converter

  UploadPresignFunction:
    Type: AWS::Serverless::Function
    DependsOn: LambdaIamRole
    Properties:
      CodeUri: upload/
      Handler: app.lambda_handler
      Runtime: python3.6
      Role: !GetAtt LambdaIamRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref FileStorageBucket
          EXPIRATION: 60
      Events:
        Presign:
          Type: Api
          Properties:
            Path: /presign
            Method: get

  ConverterFunction:
    Type: AWS::Serverless::Function
    DependsOn: LambdaIamRole
    Properties:
      CodeUri: converter/
      Handler: app.lambda_handler
      Runtime: python3.6
      Role: !GetAtt LambdaIamRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref FileStorageBucket
          EXPIRATION: 60
      Events:
        Converter:
          Type: Api
          Properties:
            Path: /convert
            Method: post

Outputs:
  ApiRoot:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  FileStorageBucket:
    Description: "File S3 Bucket ARN"
    Value: !GetAtt FileStorageBucket.Arn
  FunctionIamRole:
    Description: "IAM role for functions"
    Value: !GetAtt LambdaIamRole.Arn
  PresignFunction:
    Description: "Presign Lambda Function ARN"
    Value: !GetAtt UploadPresignFunction.Arn
  ConverterFunction:
    Description: "Converter Lambda Function ARN"
    Value: !GetAtt ConverterFunction.Arn
